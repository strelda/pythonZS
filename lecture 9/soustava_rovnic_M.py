print('\n'.join(map(str, [i[0] for i in (lambda Ab: (lambda rec, J, Ab: Ab if J >= len(Ab) else rec(rec, J + 1, [[Ab[min([i1 for i1 in range(J, len(Ab)) if Ab[i1][0] != 0])][i3] / Ab[min([i1 for i1 in range(J, len(Ab)) if Ab[i1][0] != 0])][0] for i3 in range(len(Ab) + 1 - J) if i3 != 0] if i2 == J else ([Ab[J][i3] - Ab[min([i1 for i1 in range(J, len(Ab)) if Ab[i1][0] != 0])][i3] * Ab[J][0] / Ab[min([i1 for i1 in range(J, len(Ab)) if Ab[i1][0] != 0])][0] for i3 in range(len(Ab) + 1 - J) if i3 != 0] if i2 == min([i1 for i1 in range(J, len(Ab)) if Ab[i1][0] != 0]) else [Ab[i2][i3] - Ab[min([i1 for i1 in range(J, len(Ab)) if Ab[i1][0] != 0])][i3] * Ab[i2][0] / Ab[min([i1 for i1 in range(J, len(Ab)) if Ab[i1][0] != 0])][0] for i3 in range(len(Ab) + 1 - J) if i3 != 0]) for i2 in range(len(Ab))]))((lambda rec, J, Ab: Ab if J >= len(Ab) else rec(rec, J + 1, [[Ab[min([i1 for i1 in range(J, len(Ab)) if Ab[i1][0] != 0])][i3] / Ab[min([i1 for i1 in range(J, len(Ab)) if Ab[i1][0] != 0])][0] for i3 in range(len(Ab) + 1 - J) if i3 != 0] if i2 == J else ([Ab[J][i3] - Ab[min([i1 for i1 in range(J, len(Ab)) if Ab[i1][0] != 0])][i3] * Ab[J][0] / Ab[min([i1 for i1 in range(J, len(Ab)) if Ab[i1][0] != 0])][0] for i3 in range(len(Ab) + 1 - J) if i3 != 0] if i2 == min([i1 for i1 in range(J, len(Ab)) if Ab[i1][0] != 0]) else [Ab[i2][i3] - Ab[min([i1 for i1 in range(J, len(Ab)) if Ab[i1][0] != 0])][i3] * Ab[i2][0] / Ab[min([i1 for i1 in range(J, len(Ab)) if Ab[i1][0] != 0])][0] for i3 in range(len(Ab) + 1 - J) if i3 != 0]) for i2 in range(len(Ab))])), 0, Ab))([list(map(int, input().split())) for _ in range(int(input()))])])))